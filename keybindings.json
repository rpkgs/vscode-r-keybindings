[
  {
    "key": "ctrl+g ctrl+f",
    "command": "git.pushForce"
  },
  {
    "key": "ctrl+g ctrl+p",
    "command": "git.push"
  },
  {
    "key": "ctrl+g ctrl+a",
    "command": "git.commitAllAmend"
  },
  {
    "key": "ctrl+shift+g",
    "command": "openInSublimeMerge.open"
  },
  {
    "key": "ctrl+shift+g",
    "command": "vscsm.openInSublimeMerge"
  },
  {
    "key": "ctrl+l g",
    "command": "-extension.openInGitHub"
  },
  {
    "key": "ctrl+l p",
    "command": "-extension.openPrGitProvider"
  },
  {
    "key": "ctrl+l c",
    "command": "-extension.copyGitHubLinkToClipboard"
  },
  {
    "key": "ctrl+shift+u",
    "command": "markdown.extension.toc.addSecNumbers"
  },
  {
    "key": "ctrl+b",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "**",
      "after": "**"
    }
  },
  {
    "key": "ctrl+i",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "*",
      "after": "*"
    }
  },
  {
    "key": "ctrl+e",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "<center>",
      "after": "<\/center>"
    }
  },
  {
    "key": "shift+4",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "$",
      "after": "$"
    }
  },
  {
    "key": "ctrl+u",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "<u>",
      "after": "<\/u>"
    }
  },
  {
    "key": "alt+r",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "<span style='color:red'>",
      "after": "<\/span>"
    }
  },
  {
    "key": "alt+y",
    "command": "markdown.extension.editing._wrapBy",
    "when": "editorLangId == 'rmd' || editorLangId == 'qmd' || editorLangId == 'markdown'",
    "args": {
      "before": "<span style='background-color:yellow'>",
      "after": "<\/span>"
    }
  },
  {
    "key": "ctrl+enter",
    "command": "notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "ctrl+alt+i",
    "command": "jupyter.insertCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+oem_1 b",
    "command": "-jupyter.insertCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+alt+i",
    "command": "notebook.cell.insertCodeCellBelow",
    "when": "notebookCellListFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-notebook.cell.insertCodeCellBelow",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "jupyter.execSelectionInteractive",
    "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-jupyter.execSelectionInteractive",
    "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "f6",
    "command": "jupyter.debugcurrentcell.palette",
    "when": "jupyter.hascodecells"
  },
  {
    "key": "ctrl+r",
    "command": "quarto.runSelection",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+enter",
    "command": "-quarto.runSelection",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+enter",
    "command": "quarto.runCurrentCell"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-quarto.runCurrentCell",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "quarto.runCellsAbove",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+shift+alt+p",
    "command": "-quarto.runCellsAbove",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "quarto.renderHTML",
    "when": "editorLangId == 'qmd' "
  },
  {
    "key": "ctrl+shift+i",
    "command": "-quarto.insertCodeCell"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-r.runCurrentChunk",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+enter",
    "command": "-r.runSelection",
    "when": "editorTextFocus && editorLangId == 'r'"
  },
  {
    "key": "ctrl+enter",
    "command": "-r.runSelection",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "r.runAboveChunks",
    "when": "editorTextFocus && editorLangId =~ /rmd|qmd/"
  },
  {
    "key": "f6",
    "command": "r.helpPanel.openForSelection"
  },
  {
    "key": "ctrl+enter",
    "command": "r.runCurrentChunk",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+r",
    "command": "r.runSelection",
    "when": "editorTextFocus && editorLangId =~ /rmd|r/"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+l",
    "command": "r.loadAll",
    "when": "terminalFocus"
  },
  {
    "description": "run Ipaper::smerge()",
    "key": "ctrl+alt+g",
    "command": "r.runCommand",
    "when": "editorTextFocus",
    "args": "Ipaper::smerge()"
  },
  {
    "description": "run devtools::check()",
    "key": "ctrl+alt+e",
    "command": "r.runCommand",
    "when": "terminalFocus",
    "args": "devtools::check()"
  },
  {
    "description": "run devtools::document()",
    "key": "ctrl+shift+d",
    "command": "r.runCommand",
    "when": "terminalFocus",
    "args": "devtools::document()"
  },
  {
    "description": "run devtools::test()",
    "key": "ctrl+shift+t",
    "command": "r.runCommand",
    "when": "terminalFocus",
    "args": "devtools::test()"
  },
  {
    "key": "ctrl+alt+d",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId =~ /rmd|r|qmd/",
    "args": {
      "snippet": "%do% {\n\t$0\n}"
    }
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.insertSnippet",
    "when": "editorLangId =~ /rmd|r|qmd/",
    "args": {
      "snippet": "%in% "
    }
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.insertSnippet",
    "when": "editorLangId =~ /rmd|r|qmd/",
    "args": {
      "snippet": "%>% "
    }
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'julia'",
    "args": {
      "snippet": "|> "
    }
  },
  {
    "key": "ctrl+shift+,",
    "command": "editor.action.insertSnippet",
    "when": "editorLangId =~ /rmd|r|qmd/",
    "args": {
      "snippet": "%<>% "
    }
  },
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.insertSnippet",
    "when": "editorLangId =~ /rmd|r|qmd/",
    "args": {
      "snippet": "```{r}\n$0\n```"
    }
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-r.runSourcewithEcho",
    "when": "editorTextFocus && editorLangId == 'r'"
  },
  {
    "key": "f12",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f9",
    "command": "editor.action.revealDeclaration"
  },
  {
    "key": "f9",
    "command": "editor.action.goToDeclaration"
  },
  {
    "key": "f12",
    "command": "-editor.action.goToDeclaration"
  },
  {
    "key": "shift+delete",
    "command": "editor.action.deleteLines",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "alt+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+u",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+n",
    "command": "extension.simpleNewFile"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-extension.simpleNewFile"
  },
  {
    "key": "ctrl+alt+f",
    "command": "alignment.align",
    "when": "editorHasSelection"
  },
  {
    "key": "alt+oem_plus",
    "command": "-alignment.align",
    "when": "editorHasSelection"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-emojisense.quickEmojitext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "extension.open",
    "when": "!editorTextFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "-extension.open"
  },
  {
    "description": "R-terminal %>%",
    "key": "ctrl+shift+m",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "%>% "
    }
  },
  {
    "description": "R-terminal %<>%",
    "key": "ctrl+shift+,",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "%<>% "
    }
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "%in% "
    }
  }
]
